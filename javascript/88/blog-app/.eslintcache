[{"C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\index.js":"1","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\App.js":"3","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\Blogs.js":"4","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\Blog.js":"5","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\Comments.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":691,"mtime":1609897470958,"results":"10","hashOfConfig":"8"},{"size":1452,"mtime":1609906641804,"results":"11","hashOfConfig":"8"},{"size":1174,"mtime":1609906718475,"results":"12","hashOfConfig":"8"},{"size":1573,"mtime":1609906703201,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"l5yhdy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\index.js",[],["31","32"],"C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\App.js",["33"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect, Switch, Link } from 'react-router-dom';\nimport Blogs from './Blogs';\nimport Blog from './Blog';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <header>\n        <h1>Blog Site</h1>\n        <div id=\"HomeButtonDiv\">\n          <Link to=\"/blogs\">\n            <button id=\"homeLink\">Home</button>\n          </Link>\n        </div>\n      </header>\n      <Switch>\n        <Route path=\"/blogs\">\n          <Blogs />\n        </Route>\n        <Route path=\"/blog/:blogId\">\n          <Blog />\n        </Route>\n        <Redirect to=\"/blogs\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\Blogs.js",["34","35"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default () => {\r\n    const [blogs, setBlogs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n                if (!response.ok) {\r\n                    throw new Error(`${response.status}: ${response.statusText}`);\r\n                }\r\n                const currentBlogs = await response.json();\r\n                setBlogs(currentBlogs);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"allUsers\" >\r\n            {blogs.map(blog => (\r\n                <div className=\"blogInfo\" key={blog.id}>\r\n                    <h2>{blog.name}</h2>\r\n                    <a className=\"blogSite\">{blog.website}</a>\r\n                    <div className=\"businessDiv\">\r\n                        <h3 className=\"blogbusiness\">{blog.company.name}</h3>\r\n                        <h4 className=\"description\">{blog.company.catchPhrase}</h4>\r\n                    </div>\r\n                    <div >\r\n                        <Link to={`/blog/${blog.id}`}>\r\n                            <button id=\"postLink\">Posts</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\Blog.js",["36"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Comments from './Comments';\r\n\r\nexport default function Blog() {\r\n\r\n    let { blogId } = useParams();\r\n    const [blog, setBlog] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const response = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${blogId}`);\r\n                if (!response.ok) {\r\n                    throw new Error(`${response.status}: ${response.statusText}`);\r\n                }\r\n                const currentBlog = await response.json();\r\n                setBlog(currentBlog);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"posts\" >\r\n            {blog.map(post => (\r\n                <div className=\"blogInfo\">\r\n                    <h2>{post.title}</h2>\r\n                    <h4>{post.body}</h4>\r\n                    <div >\r\n                        <Comments postId={post.id} ></Comments>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","C:\\xampp\\htdocs\\homework\\javascript\\88\\blog-app\\src\\Comments.js",["37"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport default function Comments(props) {\r\n    const [commentsShowing, setcommentsShowing] = useState(false);\r\n    const currentPost = props.postId;\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            try {\r\n                const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currentPost}`);\r\n                if (!response.ok) {\r\n                    throw new Error(`${response.status}: ${response.statusText}`);\r\n                }\r\n                const currentComments = await response.json();\r\n                setComments(currentComments);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const text = commentsShowing ? 'Hide' : 'Show';\r\n\r\n    const toggleComments = () => {\r\n        setcommentsShowing(!commentsShowing);\r\n    }\r\n\r\n    const getCommentElem = (postId) => {\r\n        if (commentsShowing) {\r\n            return <div className=\"commentDiv\" postId={postId} >\r\n                {comments.map(c => (\r\n                    <div className=\"comments\">\r\n                        <h3>{c.name}</h3>\r\n                        <p>{c.body}</p>\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <button onClick={toggleComments}>{text} Comments</button>\r\n            {getCommentElem(currentPost)}\r\n        </div>\r\n    )\r\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":4,"column":1,"nodeType":"48","endLine":42,"endColumn":2},{"ruleId":"49","severity":1,"message":"50","line":28,"column":21,"nodeType":"51","endLine":28,"endColumn":45},{"ruleId":"52","severity":1,"message":"53","line":23,"column":8,"nodeType":"54","endLine":23,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":22,"column":8,"nodeType":"54","endLine":22,"endColumn":10,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blogId'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'currentPost'. Either include it or remove the dependency array.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [blogId]",{"range":"66","text":"67"},"Update the dependencies array to be: [currentPost]",{"range":"68","text":"69"},[770,772],"[blogId]",[797,799],"[currentPost]"]